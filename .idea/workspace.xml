<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="39010bec-a02c-4fd1-a65b-6979b06d4fd7" name="Changes" comment="">
      <change afterPath="$PROJECT_DIR$/.babelrc" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/jest.config.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/unit/cart.test.js" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/unit/catalog.test.js" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/unit/pages.test.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.gitignore" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/README.md" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/package-lock.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/package.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/client/Application.tsx" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/client/api.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/client/components/CartBadge.tsx" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/client/components/Form.tsx" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/client/components/Image.tsx" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/client/components/ProductDetails.tsx" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/client/components/ProductItem.tsx" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/client/index.css" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/client/index.tsx" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/client/pages/Cart.tsx" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/client/pages/Catalog.tsx" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/client/pages/Contacts.tsx" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/client/pages/Delivery.tsx" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/client/pages/Home.tsx" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/client/pages/Product.tsx" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/client/store.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/common/types.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/server/data.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/server/index.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/server/routes.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/static/index.html" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/test/hermione/example.hermione.js" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/test/unit/example.test.js" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/tsconfig.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/webpack.config.ts" beforeDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectId" id="2HSJtjvu95Tqhh5Hqrm2b9yzCmL" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "RunOnceActivity.OpenProjectViewOnStart": "true",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "WebServerToolWindowFactoryState": "false",
    "last_opened_file_path": "E:/Документы/Илья/Програмирование/yandex-academia/testing-homework/test/unit",
    "node.js.detected.package.eslint": "true",
    "node.js.detected.package.tslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "node.js.selected.package.tslint": "(autodetect)",
    "nodejs.jest.jest_package": "E:/Документы/Илья/Програмирование/yandex-academia/testing-homework/node_modules/jest",
    "nodejs_package_manager_path": "npm",
    "ts.external.directory.path": "E:\\Документы\\Илья\\Програмирование\\yandex-academia\\testing-homework\\node_modules\\typescript\\lib",
    "vue.rearranger.settings.migration": "true"
  }
}]]></component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="E:\Документы\Илья\Програмирование\yandex-academia\testing-homework\test\unit" />
    </key>
  </component>
  <component name="RunManager" selected="Jest.Тестируем корзину.Если корзина пустая, должна отображаться ссылка на каталог товаров:">
    <configuration name="Тестируем корзину.В шапке рядом со ссылкой на корзину должно отображаться количество не повторяющихся товаров в ней: " type="JavaScriptTestRunnerJest" temporary="true" nameIsGenerated="true">
      <node-interpreter value="project" />
      <node-options value="" />
      <jest-package value="$PROJECT_DIR$/node_modules/jest" />
      <working-dir value="$PROJECT_DIR$" />
      <envs />
      <scope-kind value="TEST" />
      <test-file value="$PROJECT_DIR$/test/unit/cart.test.js" />
      <test-names>
        <test-name value="Тестируем корзину" />
        <test-name value="В шапке рядом со ссылкой на корзину должно отображаться количество не повторяющихся товаров в ней: " />
      </test-names>
      <method v="2" />
    </configuration>
    <configuration name="Тестируем корзину.В корзине должна отображаться таблица с добавленными в нее товарами: " type="JavaScriptTestRunnerJest" temporary="true" nameIsGenerated="true">
      <node-interpreter value="project" />
      <node-options value="" />
      <jest-package value="$PROJECT_DIR$/node_modules/jest" />
      <working-dir value="$PROJECT_DIR$" />
      <envs />
      <scope-kind value="TEST" />
      <test-file value="$PROJECT_DIR$/test/unit/cart.test.js" />
      <test-names>
        <test-name value="Тестируем корзину" />
        <test-name value="В корзине должна отображаться таблица с добавленными в нее товарами: " />
      </test-names>
      <method v="2" />
    </configuration>
    <configuration name="Тестируем каталог.Если товар уже добавлен в корзину, в каталоге и на странице товара должно отображаться сообщение об этом: " type="JavaScriptTestRunnerJest" temporary="true" nameIsGenerated="true">
      <node-interpreter value="project" />
      <node-options value="" />
      <jest-package value="$PROJECT_DIR$/node_modules/jest" />
      <working-dir value="$PROJECT_DIR$" />
      <envs />
      <scope-kind value="TEST" />
      <test-file value="$PROJECT_DIR$/test/unit/catalog.test.js" />
      <test-names>
        <test-name value="Тестируем каталог" />
        <test-name value="Если товар уже добавлен в корзину, в каталоге и на странице товара должно отображаться сообщение об этом: " />
      </test-names>
      <method v="2" />
    </configuration>
    <configuration name="Тестируем корзину.для каждого товара должны отображаться название, цена, количество , стоимость, а также должна отображаться общая сумма заказа: " type="JavaScriptTestRunnerJest" temporary="true" nameIsGenerated="true">
      <node-interpreter value="project" />
      <node-options value="" />
      <jest-package value="$PROJECT_DIR$/node_modules/jest" />
      <working-dir value="$PROJECT_DIR$" />
      <envs />
      <scope-kind value="TEST" />
      <test-file value="$PROJECT_DIR$/test/unit/cart.test.js" />
      <test-names>
        <test-name value="Тестируем корзину" />
        <test-name value="для каждого товара должны отображаться название, цена, количество , стоимость, а также должна отображаться общая сумма заказа: " />
      </test-names>
      <method v="2" />
    </configuration>
    <configuration name="Тестируем корзину.Если корзина пустая, должна отображаться ссылка на каталог товаров:" type="JavaScriptTestRunnerJest" temporary="true" nameIsGenerated="true">
      <node-interpreter value="project" />
      <node-options value="" />
      <jest-package value="$PROJECT_DIR$/node_modules/jest" />
      <working-dir value="$PROJECT_DIR$" />
      <envs />
      <scope-kind value="TEST" />
      <test-file value="$PROJECT_DIR$/test/unit/cart.test.js" />
      <test-names>
        <test-name value="Тестируем корзину" />
        <test-name value="Если корзина пустая, должна отображаться ссылка на каталог товаров:" />
      </test-names>
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Jest.Тестируем корзину.Если корзина пустая, должна отображаться ссылка на каталог товаров:" />
        <item itemvalue="Jest.Тестируем корзину.для каждого товара должны отображаться название, цена, количество , стоимость, а также должна отображаться общая сумма заказа: " />
        <item itemvalue="Jest.Тестируем корзину.В корзине должна отображаться таблица с добавленными в нее товарами: " />
        <item itemvalue="Jest.Тестируем корзину.В шапке рядом со ссылкой на корзину должно отображаться количество не повторяющихся товаров в ней: " />
        <item itemvalue="Jest.Тестируем каталог.Если товар уже добавлен в корзину, в каталоге и на странице товара должно отображаться сообщение об этом: " />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="39010bec-a02c-4fd1-a65b-6979b06d4fd7" name="Changes" comment="" />
      <created>1668272768508</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1668272768508</updated>
      <workItem from="1668272769930" duration="2748000" />
      <workItem from="1668276816111" duration="1821000" />
      <workItem from="1668357186335" duration="4647000" />
      <workItem from="1668433809844" duration="3915000" />
      <workItem from="1668609966354" duration="10687000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <breakpoints>
        <line-breakpoint enabled="true" type="javascript">
          <url>file://$PROJECT_DIR$/test/unit/catalog.test.js</url>
          <line>76</line>
          <properties lambdaOrdinal="-1" />
          <option name="timeStamp" value="4" />
        </line-breakpoint>
      </breakpoints>
    </breakpoint-manager>
  </component>
</project>